plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Decode key.properties if the base64 file exists
def keystorePropertiesFile = rootProject.file('key.properties')
def keystoreBase64File = rootProject.file('key.properties.base64')
if (!keystorePropertiesFile.exists() && keystoreBase64File.exists()) {
    println "Decoding key.properties from key.properties.base64..."
    def decodedBytes = keystoreBase64File.text.decodeBase64()
    keystorePropertiesFile.withOutputStream { it.write(decodedBytes) }
}

// Load keystore properties
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Decode key.jks if the base64 file exists
def keystoreFile = rootProject.file('android/app/keystore.jks')
def keystoreBase64 = rootProject.file('keystore.jks.base64')
if (!keystoreFile.exists() && keystoreBase64.exists()) {
    println "Decoding keystore.jks from keystore.jks.base64..."
    def decodedBytes = keystoreBase64.text.decodeBase64()
    keystoreFile.withOutputStream { it.write(decodedBytes) }
}

android {
    namespace = "com.example.explore_ci_cd"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.explore_ci_cd"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(rootProject.file(keystoreProperties['storeFile'].replace('\\', '/'))) : null
            storePassword = keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source = "../.."
}
