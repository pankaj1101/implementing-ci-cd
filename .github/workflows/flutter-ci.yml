name: Flutter CI/CD - Android Build & Firebase Distribution

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"
          cache: true

      - name: Verify Flutter & Dart Versions
        run: |
          flutter --version
          dart --version

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/flutter  # âœ… Corrected for macOS
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Install Firebase CLI (macOS)
        run: npm install -g firebase-tools

      - name: Verify Firebase CLI Installation
        run: firebase --version

      - name: Decode Keystore File
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Decode Key Properties File
        run: echo "${{ secrets.ANDROID_KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties

      - name: Set Signing Environment Variables
        run: |
          echo "STORE_PASSWORD=$(grep storePassword android/key.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "KEY_PASSWORD=$(grep keyPassword android/key.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "KEY_ALIAS=$(grep keyAlias android/key.properties | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "STORE_FILE=keystore.jks" >> $GITHUB_ENV

      - name: Build Release APK
        run: flutter build apk --release

      # - name: Create GitHub Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/release/*.apk"
      #     tag: v1.0.${{ github.run_number }}
      #     token: ${{ secrets.TOKEN }}

      # - name: Upload to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     serviceCredentialsFileContent: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      #     groups: testers
      #     file: build/app/outputs/flutter-apk/app-release.apk
      #     releaseNotes: "This is the release note for the current build."
