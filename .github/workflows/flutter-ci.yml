name: Flutter CI/CD - Android Build & Firebase Distribution

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json

      - name: Decode firebase_option
        env:
          firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
        run: echo "$firebase_options_dart" > lib/firebase_options.dart

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"
          cache: true

      - name: Verify Flutter & Dart Versions
        run: |
          flutter --version
          dart --version

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            C:\Users\runneradmin\AppData\Local\Pub\Cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Verify Firebase CLI Installation
        run: firebase --version

      # - name: Authenticate with Firebase using Service Account
      #   run: |
      #     echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > $env:GITHUB_WORKSPACE\service-account.json
      #     $env:GOOGLE_APPLICATION_CREDENTIALS = "$env:GITHUB_WORKSPACE\service-account.json"
      #     firebase projects:list
      #   shell: pwsh

      - name: Build APK
        run: flutter build apk --release

      # - name: Build AppBundle
      #   run: flutter build appbundle

      # - name: Upload APK to Firebase App Distribution
      #   run: |
      #     firebase appdistribution:distribute "build/app/outputs/flutter-apk/app-release.apk" `
      #       --app="${{ secrets.FIREBASE_APP_ID }}" `
      #       --groups="testers" `
      #       --release-notes="Testing the app"
      #   shell: bash

      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.APPID}}
          token: ${{secrets.TOKEN}}
          groups: pre-tester
          file: build/app/outputs/apk/release/app-release.apk
